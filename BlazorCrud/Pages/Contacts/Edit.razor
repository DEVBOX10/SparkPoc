@page "/contacts/{Id:int}/edit"

<PageTitle>Edit contact</PageTitle>

<h1 class="mb-8 text-3xl font-bold">
	<a preload class="text-blue-500 hover:text-blue-600" href="/contacts">
		Contacts
	</a>
	<span class="text-blue-500 font-medium">/</span>
	@Form.Name
</h1>
<FlashMessages />

<div class="max-w-3xl bg-white rounded-md shadow overflow-hidden">
	<h2 class="text-lg font-bold pt-8 pl-8">Edit Contact</h2>
	<EditForm method="post" Model="Form" OnValidSubmit="UpdateContact" FormName="updatecontact" Enhance>
		<DataAnnotationsValidator />
		<div class="flex flex-wrap p-8">
			<div class="pb-8 pr-6 w-full lg:w-1/2 space-y-2">
				<label for="name">Title</label>
				<InputText id="name" @bind-Value="Form.Name" class="relative px-6 py-3 w-full rounded border-gray-300" />
				<ValidationMessage For="() => Form.Name" />
			</div>
			<div class="pb-8 pr-6 w-full lg:w-1/2 space-y-2">
				<label for="email">Email</label>
				<InputText type="email" id="email" @bind-Value="Form.Email" class="relative px-6 py-3 w-full rounded border-gray-300" />
				<ValidationMessage For="() => Form.Email" />
			</div>
			<div class="pb-8 pr-6 w-full lg:w-1/2 space-y-2">
				<label for="city">City</label>
				<InputText id="city" @bind-Value="Form.City" class="relative px-6 py-3 w-full rounded border-gray-300" />
				<ValidationMessage For="() => Form.City" />
			</div>
			<div class="pb-8 pr-6 w-full lg:w-1/2 space-y-2">
				<label for="phone">Phone</label>
				<InputText id="phone" @bind-Value="Form.Phone" class="relative px-6 py-3 w-full rounded border-gray-300" />
				<ValidationMessage For="() => Form.Phone" />
			</div>
		</div>

		<div class="flex items-center justify-end px-8 py-4 bg-gray-50 border-t border-gray-100">
			<button type="submit" class="px-4 py-2 font-medium rounded bg-blue-500 hover:bg-blue-600 text-white transition">
				Save
			</button>
		</div>
	</EditForm>
</div>
<div class="max-w-3xl bg-white rounded-md shadow overflow-hidden mt-8">
	<div class="flex justify-between p-8">
		<h2 class="text-lg font-bold">Delete Contact</h2>
		<EditForm method="post" Model="Form" OnSubmit="DeleteContact" FormName="deletecontact" Enhance>
			<button type="submit" class="px-4 py-2 font-medium rounded bg-red-500 hover:bg-red-600 text-white transition">
				Delete
			</button>
		</EditForm>
	</div>
</div>

	@code {
	[SupplyParameterFromForm]
	public Contact Form { get; set; }
	[Parameter]
	public int Id { get; set; }
	[CascadingParameter]
	public HttpContext Context { get; set; }
	[Inject]
	public NavigationManager Nav { get; set; }

	protected override void OnInitialized()
	{
		Form ??= Database.Contacts.Where(x => x.Id == Id).First();
	}

	public void UpdateContact()
	{
		// Normally this removal wouldn't need to happen but were working with static data so yeah...
		var oldContact = Database.Contacts.First(x => x.Id == Id);
		Database.Contacts.Remove(oldContact);

		// set id from url and save
		Form.Id = Id;
		Database.Contacts.Add(Form);

		Context.SetFlash("success", "Contact updated");
		Nav.NavigateTo($"/contacts/{Id}/edit");
	}

	public void DeleteContact()
	{
		var contact = Database.Contacts.First(x => x.Id == Id);
		Database.Contacts.Remove(contact);
		Nav.NavigateTo($"/contacts");
	}
}